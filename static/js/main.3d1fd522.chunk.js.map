{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Loader/Loader.module.css","services/imagesServices.js","components/Searchbar/Searchbar.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Loader/Loader.js","App.js","index.js","components/Searchbar/Searchbar.module.css","components/Modal/Modal.module.css"],"names":["module","exports","API_KEY","BASE_URL","a","imageName","currentPage","searchQuery","fetch","response","json","data","hits","Searchbar","onSubmit","useState","setimageName","className","s","SearchForm","e","preventDefault","trim","toast","type","SearchFormButton","SearchFormButtonLabel","value","onChange","currentTarget","toLowerCase","SearchFormInput","autoComplete","autoFocus","placeholder","modalRoot","document","querySelector","Modal","onClose","src","alt","isFirstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","onClick","target","ImageGalleryItemImage","ImageGalleryItem","largeImageUrl","showModal","setshowModal","toggleModal","ImageGallery","images","map","id","webformatURL","largeImageURL","tags","Button","Spinner","loader","color","height","width","timeout","App","setImageName","setImages","setCurrentPage","isLoading","setIsLoading","error","setError","fetchImagesAPI","then","newImages","scrollPage","catch","finally","fetchImages","scrollTo","top","documentElement","scrollHeight","behavior","message","length","prevState","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3d1fd522.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1W9ra\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3bEZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__3_c_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__FFK3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__3kpGF\"};","const API_KEY = '19141358-bb46b5eb9dddc73023fff1d28';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\nexport default async function fetchImagesAPI({ imageName, currentPage }) {\r\n  const searchQuery = `?q=${imageName}&page=${currentPage}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/${searchQuery}`);\r\n    const data = await response.json();\r\n    return data.hits;\r\n  } catch (error) {\r\n    return error('Some error in fetch');\r\n  }\r\n}","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport s from './Searchbar.module.css';\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n    const [imageName, setimageName] = useState('');\r\n\r\n    const handleChange = e => {\r\n        setimageName(e.currentTarget.value.toLowerCase());\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (imageName.trim() === '') {\r\n            toast('Please enter search query');\r\n            return;\r\n        }\r\n\r\n        onSubmit(imageName);\r\n\r\n        setimageName('');\r\n    };\r\n\r\n    return (\r\n        <header className={s.Searchbar}>\r\n            <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n                <button type=\"submit\" className={s.SearchFormButton}>\r\n                    <span className={s.SearchFormButtonLabel}>Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    value={imageName}\r\n                    onChange={handleChange}\r\n                    className={s.SearchFormInput}\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;","import { useEffect, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal({ onClose, src, alt }) {\r\n    const isFirstRender = useRef(true);\r\n\r\n    useEffect(() => {\r\n        if (isFirstRender.current) {\r\n            window.addEventListener('keydown', handleKeyDown);\r\n            isFirstRender.current = false;\r\n            return;\r\n        }\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    });\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            onClose();\r\n        }\r\n    };\r\n\r\n    const handleBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            onClose();\r\n        }\r\n    };\r\n    return createPortal(\r\n        <div className={s.Overlay} onClick={handleBackdropClick}>\r\n            <div className={s.Modal}>\r\n                <img src={src} alt={alt} className={s.ImageGalleryItemImage} />\r\n            </div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n}\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;","\r\nimport { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nimport Modal from '../Modal';\r\n\r\nexport default function ImageGalleryItem({ src, alt, largeImageUrl }) {\r\n    const [showModal, setshowModal] = useState(false);\r\n\r\n    const toggleModal = () => {\r\n        setshowModal(!showModal);\r\n    };\r\n\r\n    return (\r\n        <li className={s.ImageGalleryItem}>\r\n            <img\r\n                onClick={toggleModal}\r\n                src={src}\r\n                alt={alt}\r\n                className={s.ImageGalleryItemImage}\r\n            />\r\n            {showModal && (\r\n                <Modal onClose={toggleModal} src={largeImageUrl} alt={alt} />\r\n            )}\r\n        </li>\r\n    );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n};","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nexport default function ImageGallery({ images }) {\r\n    return (\r\n        <ul className={s.ImageGallery}>\r\n            {images.map(({ id, webformatURL, largeImageURL, tags }) => (\r\n                <ImageGalleryItem\r\n                    key={id}\r\n                    src={webformatURL}\r\n                    largeImageUrl={largeImageURL}\r\n                    alt={tags}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    images: PropTypes.array.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './Button.module.css';\r\n\r\nexport default function Button({ onClick }) {\r\n    return (\r\n        <button onClick={onClick} className={s.Button}>\r\n            Load more\r\n        </button>\r\n    );\r\n}\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};","import { useState } from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <Loader\r\n            className={s.loader}\r\n            type=\"Bars\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={3000} //3 secs\r\n        />\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\nimport { ToastContainer } from 'react-toastify';\n\nimport fetchImagesAPI from './services/imagesServices';\nimport Searchbar from './components/Searchbar';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Loader from './components/Loader';\n\nfunction App() {\n  const [imageName, setImageName] = useState('');\n  const [images, setImages] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchImages();\n  }, [imageName, currentPage]);\n\n  function onChangeQuery(imageName) {\n    setImageName(imageName);\n    setCurrentPage(1);\n    setImages([]);\n    setError(null);\n  }\n\n  function fetchImages() {\n    if (imageName === '') {\n      return;\n    }\n\n    setIsLoading(true);\n\n    fetchImagesAPI({ imageName, currentPage })\n      .then(newImages => {\n        setImages(images => [...images, ...newImages]);\n        scrollPage();\n      })\n      .catch(error => setError(error))\n      .finally(() => setIsLoading(false));\n  }\n\n  const onLoadMoreBtnClick = () => {\n    setCurrentPage(prevState => prevState + 1);\n    scrollPage();\n  };\n\n  const scrollPage = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      {error && <p>Whoops, something went wrong: {error.message}</p>}\n      <Searchbar onSubmit={onChangeQuery} />\n      <ImageGallery images={images} />\n      {isLoading && <Loader />}\n\n      {!isLoading && images.length >= 12 && !error && (\n        <Button onClick={onLoadMoreBtnClick} />\n      )}\n\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__3fn3R\",\"SearchForm\":\"Searchbar_SearchForm__1-MTK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3EzH2\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3g8H-\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3nFHG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1yOJn\",\"ModalImg\":\"Modal_ModalImg__34iNH\"};"],"sourceRoot":""}